package com.example.androidapp.core.data.remoteimport com.google.gson.GsonBuilderimport okhttp3.OkHttpClientimport retrofit2.Retrofitimport retrofit2.converter.gson.GsonConverterFactoryobject Api {    // Adresa serverului - poți schimba între cele două variante comentând/decomentând//    private const val BASE_URL = "192.168.43.162:3000"//    private const val BASE_URL = "10.220.20.83:3000"    private const val BASE_URL = "172.20.10.2:3000"    //10.220.20.83    // private const val BASE_URL = "172.30.115.89:3000"    // URL-urile complete pentru HTTP și WebSocket    private const val HTTP_URL = "http://$BASE_URL/"    const val WS_URL = "ws://$BASE_URL/"    // Instanța Gson pentru conversia JSON    private val gson = GsonBuilder().create()    // Interceptor pentru token    val tokenInterceptor = TokenInterceptor()    // Configurare OkHttpClient    val okHttpClient: OkHttpClient = OkHttpClient.Builder()        .addInterceptor(tokenInterceptor) // Adăugăm token-ul în fiecare cerere        .build()    // Instanța Retrofit    val retrofit: Retrofit = Retrofit.Builder()        .baseUrl(HTTP_URL)        .client(okHttpClient) // Asigurăm utilizarea clientului configurat        .addConverterFactory(GsonConverterFactory.create(gson))        .build()}